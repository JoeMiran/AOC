// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    //Dmux8Way (in = load, sel = adress, a = l0, b = l1, c = l2, d = l3, e = l4, f = l5, g = l6, h = l7);
    Dmux8Way16 (in = in, sel = adress, a = r0, b = r1, c = r2, d = r3, e = r4, f = r5, g = r6, h = r7);
    Register (in = r0, load = l0, out = s0);
    Register (in = r1, load = l1, out = s1);
    Register (in = r2, load = l2, out = s2);
    Register (in = r3, load = l3, out = s3);
    Register (in = r4, load = l4, out = s4);
    Register (in = r5, load = l5, out = s5);
    Register (in = r6, load = l6, out = s6);
    Register (in = r7, load = l7, out = s7);
    Mux8Way16 (a = s0, b = s1, c = s2, d = s3, e = s4, f = s5, g = s6, h = s7, sel = adress, out = s);
}